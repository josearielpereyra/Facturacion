/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazGrafica;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;

import objetosDeDatos.BaseDeDatos;
import objetosDeDatos.Producto;

import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alexa
 */
public class FormProduct extends javax.swing.JDialog {

    JTextField[] campos;

    /**
     * Creates new form NewJDialog
     */
    public FormProduct(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        campos = new JTextField[]{txtCodigo, txtDescripcion, txtCosto, txtPrecio, txtExistencia, txtImpuesto};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCancelar = new javax.swing.JButton();
        txtCodigo = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lbTituloAzul = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCosto = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtExistencia = new javax.swing.JTextField();
        txtImpuesto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnCancelar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtCodigo.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txtPrecio.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Descripcion:");

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        lbTituloAzul.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        lbTituloAzul.setForeground(new java.awt.Color(255, 255, 255));
        lbTituloAzul.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTituloAzul.setText("NUEVO PRODUCTO");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbTituloAzul, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTituloAzul)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtDescripcion.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        btnGuardar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Existencia:");

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Costo:");

        txtCosto.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Precio:");

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Impuesto:");

        txtExistencia.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txtImpuesto.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Codigo:");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(txtDescripcion)
                            .addComponent(txtCosto)
                            .addComponent(txtPrecio)
                            .addComponent(txtExistencia)
                            .addComponent(txtImpuesto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtImpuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        Producto productoactual = new Producto(
                txtCodigo.getText().trim(),
                txtDescripcion.getText().trim(),
                Double.parseDouble(String.valueOf(txtCosto.getText())),
                Double.parseDouble(String.valueOf(txtPrecio.getText())),
                Double.parseDouble(String.valueOf(txtExistencia.getText())),
                Double.parseDouble(String.valueOf(txtImpuesto.getText())),0
        );

        if (productoactual.guardar() == true) {
            limpiarCampos();
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
            String codigo = txtCodigo.getText().trim();

            if (codigo.length() > 0) {
                Connection conexion = BaseDeDatos.conectar();
                String sql = "SELECT codigo, descripcion, precio, costo, existencia, impuesto FROM tblproducto WHERE codigo =?";

                PreparedStatement sentenciaDeBusqueda = conexion.prepareStatement(sql);
                sentenciaDeBusqueda.setString(1, codigo);

                ResultSet conjuntoDeResultados = sentenciaDeBusqueda.executeQuery();

                if (conjuntoDeResultados.next()) {
                    txtCodigo.setText(conjuntoDeResultados.getString("codigo"));
                    txtDescripcion.setText(conjuntoDeResultados.getString("descripcion"));
                    txtCosto.setText(conjuntoDeResultados.getString("costo"));
                    txtPrecio.setText(conjuntoDeResultados.getString("precio"));
                    txtExistencia.setText(conjuntoDeResultados.getString("existencia"));
                    txtImpuesto.setText(conjuntoDeResultados.getString("impuesto"));
                } else {
                    JOptionPane.showMessageDialog(this, "No hay ningun producto registrado con este codigo");
                }
            } else {
                buscarCliente();
            }

        } catch (SQLException ex) {
            mostrarMensaje("Ha ocurrido un error. Por favor vuelva a intentar. Codigo de error: " + ex.getErrorCode());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JLabel lbTituloAzul;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtExistencia;
    private javax.swing.JTextField txtImpuesto;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

    private void mostrarMensaje(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje);
    }

    private void mostrarMensajeDeError(SQLException ex) {
        mostrarMensaje("Ha ocurrido un error. Por favor vuelva a intentar. Codigo de error: " + ex.getErrorCode());
    }

    private void buscarCliente() {
        try {
            JTable tablaProducto = new JTable();

            Connection conexion = BaseDeDatos.conectar();
            String sql = "SELECT codigo, descripcion, precio, costo, existencia, impuesto "
                    + "FROM tblproducto ";

            Statement sentenciaDeConsulta = conexion.createStatement();
            ResultSet conjuntoDeResultados = sentenciaDeConsulta.executeQuery(sql);

            Vector<String> encabezados = new Vector<>();
            Vector< Vector<String>> datos = new Vector<>();

            ResultSetMetaData metaDatos = conjuntoDeResultados.getMetaData();
            int totalDeColumnas = metaDatos.getColumnCount();
            for (int i = 1; i <= totalDeColumnas; i++) {
                encabezados.add(metaDatos.getColumnName(i).toUpperCase().replace("_", " "));
            }

            while (conjuntoDeResultados.next()) {
                Vector<String> registroActual = new Vector<>();
                for (int i = 1; i <= totalDeColumnas; i++) {
                    registroActual.add(String.valueOf(conjuntoDeResultados.getObject(i).toString()));
                }
                datos.add(registroActual);
            }

            DefaultTableModel modeloTabla = new DefaultTableModel(datos, encabezados) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            tablaProducto.setModel(modeloTabla);

            tablaProducto.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    actualizarCon(tablaProducto);
                }
            });

            JDialog ventanaDeBusqueda = new JDialog(this);
            ventanaDeBusqueda.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
            ventanaDeBusqueda.add(new JScrollPane(tablaProducto));
            JButton botonAceptar = new JButton("Aceptar");
            botonAceptar.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    ventanaDeBusqueda.dispose();
                }
            });
            ventanaDeBusqueda.add(botonAceptar, BorderLayout.SOUTH);

            ventanaDeBusqueda.pack();
            ventanaDeBusqueda.setLocationRelativeTo(this);
            ventanaDeBusqueda.setVisible(true);
        } catch (SQLException ex) {
            mostrarMensajeDeError(ex);
        }
    }

    private void actualizarCon(JTable tabla) {
        int fila = tabla.getSelectedRow();

        for (int i = 0; i < campos.length; i++) {
            campos[i].setText(tabla.getValueAt(fila, i).toString());
        }
    }

    private void limpiarCampos() {
        Component[] componentes = this.getContentPane().getComponents();

        for (Component componente : componentes) {
            if (componente instanceof JTextField) {
                ((JTextField) componente).setText("");
            }
        }
    }

}
